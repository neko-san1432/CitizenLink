name: "CitizenLink CodeQL Configuration"

disable-default-queries: false

queries:
  # Include security and quality queries
  - uses: security-and-quality
  - uses: security-expert
  - uses: security-extended

paths-ignore:
  # Ignore test files and build artifacts
  - "**/test/**"
  - "**/tests/**"
  - "**/*.test.js"
  - "**/*.spec.js"
  - "**/node_modules/**"
  - "**/public/**"
  - "**/build/**"
  - "**/dist/**"
  - "**/*.min.js"
  - "**/*.min.css"

paths:
  # Only scan source code
  - "src/"

# Suppress specific false positives
rules:
  # Suppress known safe patterns in your codebase
  - id: js/disabling-electron-node-integration
    severity: warning

  - id: js/enabling-cors
    severity: warning

  # Add more rule suppressions as needed based on your specific alerts

# Configure query suites for different purposes
query-filters:
  - exclude:
      # Exclude queries that are too noisy for your project
      problem.severity: "info"
      tags: "experimental"

# Baseline for suppressing existing issues
# This helps establish a baseline of acceptable issues
baseline:
  # Set to true to only report new issues, suppressing existing ones
  new-issues-only: false

# Custom query configuration
query-configuration:
  # Configure specific queries
  - query: js/sql-injection
    enabled: true
    severity: "error"

  - query: js/xss
    enabled: true
    severity: "error"

  - query: js/path-injection
    enabled: true
    severity: "warning"

# Disable queries that don't apply to your project
  - query: cpp/
    enabled: false

  - query: csharp/
    enabled: false

  - query: go/
    enabled: false

  - query: java/
    enabled: false

  - query: python/
    enabled: false

  - query: ruby/
    enabled: false

  - query: swift/
    enabled: false
